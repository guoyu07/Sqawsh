## Copyright 2015-2016 Robin Steel
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##    http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

## Copied from: https://forums.aws.amazon.com/thread.jspa?messageID=673946#673946
## (with a few tweaks - mainly as suggested on that page)

## convert HTML POST data to JSON (as needed by AWS Lambda)

## get the raw post data from the AWS built-in variable and give it a nicer name
#if ($context.httpMethod == "POST")
 #set($rawAPIData = $input.path('$'))
#else
 #set($rawAPIData = "")
#end

## first we get the number of "&" in the string, this tells us if there is more than one key value pair
#set($countAmpersands = $rawAPIData.length() - $rawAPIData.replace("&", "").length())
 
## if there are no "&" at all then we have only one key value pair.
## we append an ampersand to the string so that we can tokenise it the same way as multiple kv pairs.
## the "empty" kv pair to the right of the ampersand will be ignored anyway.
#if ($countAmpersands == 0)
 #set($rawPostData = $rawAPIData + "&")
#end
 
## now we tokenise using the ampersand(s)
#set($tokenisedAmpersand = $rawAPIData.split("&"))
 
## we set up a variable to hold the valid key value pairs
#set($tokenisedEquals = [])
 
## now we set up a loop to find the valid key value pairs, which must contain only one "="
#foreach( $kvPair in $tokenisedAmpersand )
 #set($countEquals = $kvPair.length() - $kvPair.replace("=", "").length())
 #if ($countEquals == 1)
  #set($kvTokenised = $kvPair.split("="))
  #if ($kvTokenised[0].length() > 0)
   ## we found a valid key value pair. add it to the list.
   #set($devNull = $tokenisedEquals.add($kvPair))
  #end
 #end
#end
 
## next we set up our loop inside the output structure "{" and "}"
{
"requestId" : "$context.requestId",
#foreach( $kvPair in $tokenisedEquals )
  ## finally we output the JSON for this pair and append a comma if this isn't the last pair
  #set($kvTokenised = $kvPair.split("="))
  ## We exclude all non-alphanumeric characters (except ., /, and -) - except for URLs
  ## (. is after initial, / is between players names, - is in dates)
  #if (!$util.urlDecode($kvTokenised[0]).contains("Url"))
    #if ($kvTokenised.size() == 2 && $kvTokenised[1].length() > 0)
      #set($value = $util.urlDecode($kvTokenised[1]).replaceAll("[^\\.A-Za-z0-9-/ ]", ""))
    #else
      #set($value = "")
    #end
  #else
    ## Url values will never be null - as they're not entered by the user
    #set($value = $util.urlDecode($kvTokenised[1]))
  #end
 "$util.urlDecode($kvTokenised[0])" : "$value"#if( $foreach.hasNext ),#end
#end
}